---
- name: Install Git and Clone Remote Repository
  hosts: localhost
  become: true
  tasks:
    - name: Install Git
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Clone Remote Git Repository
      git:
        repo: https://github.com/peernitzanim/CICD.git
        dest: /home/ubuntu/test

    - name: Install depedencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip

    - name: Install yum-utils
      apt:
        name: dnf
        state: present
    
    - name: Copy SSH private key
      copy:
        src: /home/ubuntu/peer_computer.pem
        dest: /home/ubuntu/.ssh/peer_computer.pem
        mode: '0600'

    - name: Install prerequisites for Docker repository
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common']
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable

    - name: Install Docker CE
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
        update_cache: yes

    - name: Install prerequisites for docker-compose
      apt:
        name: ['python3-pip', 'python3-setuptools', 'virtualenv']

    - name: Install docker-compose
      pip:
        name: docker-compose

    - name: Enable docker.service
      systemd:
        name: docker.service
        daemon_reload: true
        enabled: true

    - name: Enable containerd.service
      systemd:
        name: containerd.service
        daemon_reload: true
        enabled: true

    - name: Build Docker image
      community.docker.docker_image:
        name: peernitzanim/hello-world   # Name of the image
        tag: latest                      # Tag for the image
        build:
          path: /home/ubuntu/CICD   
        source: build
      become: yes  # Use if Docker commands require sudo

    - name: Log in to Docker Hub
      community.docker.docker_login:
        username: "peernitzanim"
        password: "PEve804173"
   
    - name: Push Docker image to Docker Hub
      community.docker.docker_image:
        name: peernitzanim/hello-world   # Name of the image
        tag: latest                      # Tag for the image
        push: yes 
        source: local  

    - name: Run Docker container from the image
      community.docker.docker_container:
        name: hello-world-container-new   # Name of the container
        image: peernitzanim/hello-world:latest
        state: started                # Ensure the container is running
        restart_policy: always  
        ports:
          - "8080:8080"
        
